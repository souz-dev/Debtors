{"ast":null,"code":"var _jsxFileName = \"/home/hiago-souza/Development/Estudos/debtors/src/Components/CreateCardDebtors/index.jsx\",\n    _s = $RefreshSig$();\n\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport services from '../../services';\nimport './style.scss';\nimport { convertToBrazil } from '../../utils/currency.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateCardDebtors({\n  clients,\n  debtors,\n  setDebtors,\n  newDebt,\n  clearForm,\n  showForm,\n  setShowForm,\n  showAddButton,\n  setShowAddButton\n}) {\n  _s();\n\n  useEffect(() => {\n    console.log(debtors);\n  }, [debtors]);\n\n  const handleChange = event => {\n    const {\n      id,\n      value\n    } = event.target;\n    console.log(convertToBrazil(value), 'event'); //    setDebtors({ ...debtors, [id]: formatToBRL(value.replace(/\\D/gi,''))})\n\n    setDebtors({ ...debtors,\n      [id]: convertToBrazil(value.replace(/\\D/gi, ''))\n    });\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      idUsuario: debtors.UserId.id,\n      motivo: debtors.description,\n      valor: debtors.value.replace(/\\D/gi, '')\n    };\n\n    if (debtors.isEdit) {\n      const {\n        data: {\n          data: {\n            success\n          }\n        }\n      } = await services.debtors.put(debtors.id, data);\n\n      if (success) {\n        newDebt(data);\n        setShowForm(!showForm);\n        setShowAddButton(!showAddButton);\n      }\n    } else {\n      const {\n        data: {\n          data: {\n            success\n          }\n        }\n      } = await services.debtors.post(data);\n\n      if (success) {\n        newDebt(data);\n        setShowForm(!showForm);\n        setShowAddButton(!showAddButton);\n      }\n    }\n\n    setDebtors({\n      id: '',\n      UserId: '',\n      description: '',\n      value: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Inserir uma divida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"fomr-client\",\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"UserId\",\n            options: clients // groupBy={(option) => option.firstLetter}\n            ,\n            getOptionLabel: users => users.name,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Clientes\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 40\n            }, this),\n            onChange: (e, i) => setDebtors({ ...debtors,\n              UserId: i\n            }),\n            value: debtors.UserId,\n            disabled: debtors.isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Motivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"motivo\",\n            rows: \"2\",\n            cols: \"33\",\n            onChange: e => setDebtors({ ...debtors,\n              description: e.target.value\n            }),\n            value: debtors.description,\n            placeholder: \" Informe o motivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"value\",\n            type: \"text\",\n            className: \"input-value\",\n            onChange: handleChange,\n            value: debtors.value,\n            placeholder: \"R$ 100,00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: clearForm,\n            className: \"button-cancel\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-add\",\n            children: [debtors.isEdit ? \"Editar\" : \"Adicionar\", \" Divida\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateCardDebtors, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CreateCardDebtors;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCardDebtors\");","map":{"version":3,"sources":["/home/hiago-souza/Development/Estudos/debtors/src/Components/CreateCardDebtors/index.jsx"],"names":["TextField","useEffect","Autocomplete","services","convertToBrazil","CreateCardDebtors","clients","debtors","setDebtors","newDebt","clearForm","showForm","setShowForm","showAddButton","setShowAddButton","console","log","handleChange","event","id","value","target","replace","onSubmit","preventDefault","data","idUsuario","UserId","motivo","description","valor","isEdit","success","put","post","users","name","width","params","e","i"],"mappings":"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","sourcesContent":["import TextField from '@material-ui/core/TextField';\nimport {useEffect} from 'react'\nimport  Autocomplete  from '@material-ui/lab/Autocomplete';\nimport services from '../../services';\nimport './style.scss'\nimport {convertToBrazil} from '../../utils/currency.js'\n\nexport function CreateCardDebtors({ \n  clients, \n  debtors, \n  setDebtors, \n  newDebt, \n  clearForm, \n  showForm, \n  setShowForm, \n  showAddButton,\n  setShowAddButton \n}) {\n  useEffect(()=>{\n    console.log(debtors)\n  },[debtors])\n\n  const handleChange = event => {\n    const { id, value } = event.target\n    console.log(convertToBrazil(value), 'event')\n    \n//    setDebtors({ ...debtors, [id]: formatToBRL(value.replace(/\\D/gi,''))})\nsetDebtors({ ...debtors, [id]: convertToBrazil(value.replace(/\\D/gi,''))})\n  }\n\n\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      idUsuario: debtors.UserId.id,\n      motivo: debtors.description,\n      valor:debtors.value.replace(/\\D/gi , '')\n    }\n  \n    if(debtors.isEdit) {\n      const { data: { data: { success }}} =  await services.debtors.put( debtors.id, data)\n      if(success){\n        newDebt(data);\n        setShowForm(!showForm);\n        setShowAddButton(!showAddButton);\n        \n      }\n    } else {\n     const { data: { data: { success }}} = await services.debtors.post(data)\n     if(success){\n      newDebt(data);\n      setShowForm(!showForm);\n      setShowAddButton(!showAddButton);\n\n    }\n    }\n    setDebtors({\n      id: '',\n      UserId: '',\n      description: '',\n      value: ''\n    })   \n\n  }\n  \n\n  \n  return (\n    <div id=\"form\">\n        <header>\n          <div>\n            <h3>Inserir uma divida</h3>\n          </div>\n        </header>\n        <main>\n          <form onSubmit={ onSubmit }>\n            <div>\n              <h4 className=\"fomr-client\">Cliente</h4>\n            <Autocomplete\n              id=\"UserId\"\n              options={clients}\n              // groupBy={(option) => option.firstLetter}\n              getOptionLabel={(users) => users.name}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Clientes\" variant=\"outlined\" />}\n              onChange={(e,i)=> setDebtors({ ...debtors, UserId: i })}\n              value={debtors.UserId}\n              disabled={debtors.isEdit}\n            />\n            </div>\n            <div>\n              <h4>Motivo</h4>\n              <textarea \n                id=\"description\" \n                name=\"motivo\" \n                rows=\"2\" cols=\"33\"\n                onChange={(e) => setDebtors({...debtors , description: e.target.value})}\n                value={debtors.description}\n                placeholder=\" Informe o motivo\"\n              />\n            </div>\n            <div>\n              <h4>Valor</h4>\n              <input \n                id='value'\n                type=\"text\" \n                className=\"input-value\" \n                onChange={handleChange}\n                value={debtors.value}\n                placeholder= \"R$ 100,00\"\n              />\n            </div>\n            <div className=\"button-container\">\n              <button type=\"submit\" onClick={clearForm} className=\"button-cancel\">\n                Cancelar\n              </button>\n              <button type=\"submit\" className=\"button-add\">\n                {debtors.isEdit ?  \"Editar\" : \"Adicionar\"} Divida\n              </button>\n            </div>\n          </form>\n        </main>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}